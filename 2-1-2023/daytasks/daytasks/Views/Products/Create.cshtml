@model daytasks.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="ProductName">Product Name</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-length="The Length must between the 8 and 15" data-val-length-max="15" data-val-length-min="8" data-val-required="The Product Name field is required." id="ProductName" name="ProductName" type="text" value="" />

                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model., "categoryid", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="categoryid">Category Id</label>

            <div class="col-md-10">
                @Html.DropDownList("categoryid", null, htmlAttributes: new { @class = "form-control" })

                
                @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="UnitPrice">Unit Price</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })*@
                <input class="form-control text-box single-line" data-val="true" data-val-number="The field Price must be a number." data-val-range="The price should beteen the 10 and 1000" data-val-range-max="1000" data-val-range-min="10" data-val-required="The Price field is required." id="UnitPrice" name="UnitPrice" type="text" value="" />
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.UnitsinStock, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="UnitsinStock">Number of Units in Stock</label>

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.UnitsinStock, new { htmlAttributes = new { @class = "form-control" } })*@
                <input class="form-control text-box single-line" data-val="true" data-val-number="The field Number of units must be a number." id="UnitsinStock" name="UnitsinStock" type="number" value="" />

                @Html.ValidationMessageFor(model => model.UnitsinStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("", "Index")*@
    <a hrf="Index">Back to List</a>
</div>
